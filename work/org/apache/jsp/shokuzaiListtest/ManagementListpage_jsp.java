/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2024-05-28 09:00:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shokuzaiListtest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;
import shokuzaiList.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class ManagementListpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("shokuzaiList");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("<!DOCTYPE html public \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=windows-31j\">\r\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>管理する食材リストページ</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/shokuzaiListtest/ManagementListpage.css\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://kit.fontaweso me.com/8ff098a16e.js\"crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"logout\">\r\n");
      out.write("                \t\t\t <form action=\"");
      out.print(request.getContextPath() );
      out.write("/logout\">\r\n");
      out.write("            \t<button type=\"submit\"class=\"b\">ログアウト</button></form>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("            <div class=\"hyoji\"style=\"display:inline-flex\">\r\n");
      out.write("                <form action=\"");
      out.print(request.getContextPath() );
      out.write("/SelectList\"method=\"POST\"id=\"select\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-outline-primary\" name=\"hyoji\">選択した食品で料理を検索</button></form>\r\n");
      out.write("           <form action=\"");
      out.print(request.getContextPath() );
      out.write("/shokuzaikinyu\"method=\"get\"id=\"tsuika\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-outline-info\"name=\"tsuika\"id=\"tsuika\">食品を追加</button></form>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"list\">\r\n");
      out.write("\t\t\t<table  >\r\n");
      out.write("\t\t\t\t<tr >\r\n");
      out.write("\t\t\t\t<th ></th>\r\n");
      out.write("\t\t\t\t<th >お気に入り</th>\r\n");
      out.write("\t\t\t\t\t<th >開封</th>\r\n");
      out.write("\t\t\t\t\t<th >食材名</th>\r\n");
      out.write("\t\t\t\t\t<th>数量</th>\r\n");
      out.write("\t\t\t\t\t<th >保管方法</th>\r\n");
      out.write("\t\t\t\t\t<th >期限</th>\r\n");
      out.write("\t\t\t\t\t<th >使用量</th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<th >削除</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t");


	List<ShokuzaiListBean> shokuzaiListbean=
	(List<ShokuzaiListBean>)request.getAttribute("shokuzaiList");


	 for(int i=0; i<shokuzaiListbean.size();i++){
			ShokuzaiListBean sListbean =shokuzaiListbean.get(i);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td ><input type=\"checkbox\"name=\"selectShokuzai\"value=\"");
      out.print(sListbean.getName());
      out.write("\"form=\"select\"></td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<b>");
if(sListbean.getSFavorite() ==1){out.write("★");}else{out.write("☆");};
      out.write("</b>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td >");
if(sListbean.getOpen() == 1){out.print("済");}else{out.print("未");};
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td >\r\n");
      out.write("\t\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/shokuzai_deteil\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-Link\"name=\"deteil\"value=\"");
      out.print(sListbean.getShokuzaiID());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(sListbean.getName());
      out.write("</button></form></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(sListbean.getVolume());
      out.print(sListbean.getUnit() );
      out.write('/');
      out.print(sListbean.getDefaVolume());
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      out.print(sListbean.getUnit() );
      out.write('×');
      out.print(sListbean.getQuantity());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
switch(sListbean.getSave()){
					case 1 :out.write("冷蔵庫")
					;break; case 2 :out.write("冷凍庫")
					;break; case 3 :out.write("野菜室")
					;break; case 4:out.write("常温")
					;
					}
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td >");
Date exception = sListbean.getExpiration();
					if(exception !=null){
			        Date calender =new Date();
			        long diffInMillies=sListbean.getExpiration().getTime()-calender.getTime();
			        long diffInDays=diffInMillies / (1000 * 60 * 60 * 24);
			        String color=(diffInDays <=3)?"red":"black";
			        out.println("<font color=\""+color+"\">");}
      out.write("\r\n");
      out.write("\t\t\t        ");
if(exception ==null){out.println("");}else{out.print(sListbean.getExpiration());}
      out.write(" </td>\r\n");
      out.write("\t\t\t\t\t<td ><form action= \"");
      out.print(request.getContextPath());
      out.write("/usedvolume\"method=\"POST\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"devoSID\"value=\"");
      out.print(sListbean.getShokuzaiID());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<input type=\"number\" name=\"devolume\" min=\"0\" max=\"");
      out.print(sListbean.getDefaVolume()*sListbean.getQuantity());
      out.write("deletes\"\r\n");
      out.write("\t\t\t\t\tvalue=\"0\"placeholder=\"0.01\"step=\"0.1\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(sListbean.getUnit() );
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\"value=\"確定\"></form></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t <td ><form action=\"");
      out.print(request.getContextPath() );
      out.write("/deletes\"method=\"POST\">\r\n");
      out.write("\t\t\t\t\t <button type=\"submit\" class=\"btn btn-outline-success\" name=\"deletes\"\r\n");
      out.write("\t\t\t\t\t value=\"");
      out.print(sListbean.getShokuzaiID());
      out.write("\">削除</button></form></td>\r\n");
      out.write("\t\t\t\t\t </tr>\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
