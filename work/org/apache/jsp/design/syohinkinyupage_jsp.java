/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2024-05-28 04:50:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.design;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class syohinkinyupage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=windows-31j");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html; charset=windows-31j\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>商品記入ページ</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"syohinkinyupage.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"table\">\r\n");
      out.write("            <div class=\"tablehead\">\r\n");
      out.write("            <form action=\"");
      out.print( request.getContextPath() );
      out.write("/touroku\" method=\"POST\">\r\n");
      out.write("                <table>\r\n");
      out.write("                    <caption>食品記入</caption>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>商品名</th>\r\n");
      out.write("                         <td><input type=\"text\" name=\"syouhinName\" ></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>気になる</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"radio\" name=\"shokuzai_favorite\" value=\"1\" >Yes <input type=\"radio\" name=\"shokuzai_favorite\" value=\"0\">No\r\n");
      out.write("                            <input type=\"hidden\" name=\"shokuzai_favorite\" value=\"0\">\r\n");
      out.write("\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>食材名</th>\r\n");
      out.write("                        <td><input type=\"text\" name=\"syokuzaiName\" ></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>数量</th>\r\n");
      out.write("                        <td><input type=\"number\" name=\"quantity\" max=\"5000000\" min=\"1\">\r\n");
      out.write("                         <select name=\"volume\">\r\n");
      out.write("                                <option value=\"1\">g</option>\r\n");
      out.write("                                <option value=\"2\">ml</option>\r\n");
      out.write("                                <option value=\"3\">個</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                        </td>\r\n");
      out.write("                     <tr>\r\n");
      out.write("                        <th>×</th>\r\n");
      out.write("                        <td><input type=\"number\" name=\"unit_id\" max=\"5000000\" min=\"1\"></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>保存方法</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <select name=\"save_method\" id=\"save\">\r\n");
      out.write("                              <option value=\"1\">冷蔵庫</option>\r\n");
      out.write("                              <option value=\"2\">冷凍庫</option>\r\n");
      out.write("                              <option value=\"3\">野菜室</option>\r\n");
      out.write("                              <option value=\"4\">常温保存</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>開封状態</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"radio\" name=\"open_check\" value=\"1\" checked>開封済み<input type=\"radio\" name=\"open_check\" value=\"0\">未開封\r\n");
      out.write("\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>ジャンル</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <select name=\"genre_id\">\r\n");
      out.write("                               <option value=\"1\">肉類</option>\r\n");
      out.write("                                <option value=\"2\">野菜</option>\r\n");
      out.write("                                <option value=\"3\">果物</option>\r\n");
      out.write("                                <option value=\"4\">魚介類</option>\r\n");
      out.write("                                <option value=\"5\">乾物・海藻類</option>\r\n");
      out.write("                                <option value=\"6\">卵類</option>\r\n");
      out.write("                                <option value=\"7\">パン類</option>\r\n");
      out.write("                                <option value=\"8\">ごはん類</option>\r\n");
      out.write("                                <option value=\"9\">乳製品類</option>\r\n");
      out.write("                                <option value=\"10\">豆・豆腐類</option>\r\n");
      out.write("                                <option value=\"11\">麺類</option>\r\n");
      out.write("                                <option value=\"12\">ルー・素</option>\r\n");
      out.write("                                <option value=\"13\">和風調味料</option>\r\n");
      out.write("                                <option value=\"14\">洋風調味料</option>\r\n");
      out.write("                                <option value=\"15\">中華調味料</option>\r\n");
      out.write("                                <option value=\"16\">その他</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>記入日</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"text\" name=\"filling_date\" required>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>賞味期限．消費期限</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"date\" class=\"date\" name=\"expiration_date\" required>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("                <br>\r\n");
      out.write("                <div class=\"button\">\r\n");
      out.write("                <a href=\"ManagementListpage.jsp\">\r\n");
      out.write("                <button type=\"button\" class=\"b\">キャンセル</button><br><br></a>\r\n");
      out.write("                <button type=\"submit\"  class=\"btn\">保存</button>\r\n");
      out.write("                </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
